<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprFinalDoor</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
arrived = false;    
closed = true;      //Closed door

//Time counter
enableCount = true;
frames = 0;
time = 0;

//get_time(min,sec);
platTime = get_time( 9,10 );
goldTime = get_time( 10,40);
silverTime = get_time( 13,40 );

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the time next to the trophy
//Checks which trophy to draw
if ( time &lt;= platTime )//Platinum
    trophy = 0;
else if ( time &lt;= goldTime)//Gold
    trophy = 1;
else if ( time &lt; silverTime )//Silver
    trophy = 2;
else    //Copper
    trophy = 3;
    
//Draws the trophy 
draw_sprite(sprTrophy,trophy,20,20);
//Draws the time ( min:secs)
draw_text(50,20,string(floor(time/60))+":"+string(time%60));
            
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();

draw_set_colour(c_yellow) ;

if ( place_meeting(x,y,obj_Player ) )
{
    view_yview[0] = y -1000;
    image_index = 1;
    closed = false;
    arrived = true;
    //END GAME CONDITION
    key_interact = keyboard_check(ord('E')) || gamepad_button_check(0,gp_face4);
    if ( key_interact &amp;&amp; obj_Player.image_index&gt;=4)
        room_goto(roomMenu);
}

//Display text when player arrives
if (arrived)
{
    //Draws the trophy and the time
    draw_sprite( sprTrophy,trophy,x , y- 300); 
    draw_text(x+40,y-300,"TIME:"+string(floor(time/60))+":"+string(time%60));
    //Draws the final text
    draw_text(x-50,y-250,"YOU HAVE ESCAPED, HUMAN");
    draw_text(x-65,y-230,"Press E to go back to the MENU");
    draw_text(x-20,y-210,"You died "+string(objGameManager.deadCount)+" times.");
}

//Calculate how much time took the player to finish the game
if ( enableCount &amp;&amp; closed )
{
    frames += 1;
    frames = frames%room_speed;
    if (frames == 0)
        time += 1;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
